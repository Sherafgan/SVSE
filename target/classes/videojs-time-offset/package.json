{
  "name": "videojs-time-offset",
  "description": "This repo is forked from https://github.com/cladera/videojs-time-offset, ported to es6, fixed somebugs",
  "main": "es5/plugin.js",
  "version": "0.2.1",
  "repository": {
    "type": "git",
    "url": "https://github.com/dogusdigital/videojs-time-offset.git"
  },
  "scripts": {
    "prebuild": "npm run clean",
    "build": "npm-run-all -p build:*",
    "build:js": "npm-run-all build:js:babel build:js:browserify build:js:bannerize build:js:uglify",
    "build:js:babel": "babel src -d es5",
    "build:js:bannerize": "bannerize dist/videojs-time-offset.js --banner=scripts/banner.ejs",
    "build:js:browserify": "browserify . -s videojs-time-offset -o dist/videojs-time-offset.js",
    "build:js:uglify": "uglifyjs dist/videojs-time-offset.js --comments --mangle --compress -o dist/videojs-time-offset.min.js",
    "build:test": "babel-node scripts/build-test.js",
    "clean": "rimraf dist test/dist es5 && mkdirp dist test/dist es5",
    "lint": "vjsstandard",
    "start": "babel-node scripts/server.js",
    "pretest": "npm-run-all lint build",
    "test": "karma start test/karma.conf.js",
    "test:chrome": "npm run pretest && karma start test/karma.conf.js --browsers Chrome",
    "test:firefox": "npm run pretest && karma start test/karma.conf.js --browsers Firefox",
    "test:ie": "npm run pretest && karma start test/karma.conf.js --browsers IE",
    "test:safari": "npm run pretest && karma start test/karma.conf.js --browsers Safari",
    "preversion": "npm test",
    "version": "babel-node scripts/version.js",
    "postversion": "babel-node scripts/postversion.js",
    "prepublish": "npm run build",
    "postpublish": "publish-latest",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post"
  },
  "keywords": [
    "videojs",
    "videojs-plugin"
  ],
  "author": {
    "name": "Can Küçükyılmaz",
    "email": "can@vngrs.com"
  },
  "license": "MIT",
  "browserify": {
    "transform": [
      "browserify-shim",
      "browserify-versionify"
    ]
  },
  "browserify-shim": {
    "qunit": "global:QUnit",
    "sinon": "global:sinon",
    "video.js": "global:videojs"
  },
  "style": "dist/videojs-time-offset.css",
  "videojs-plugin": {
    "style": "dist/videojs-time-offset.css",
    "script": "dist/videojs-time-offset.min.js"
  },
  "vjsstandard": {
    "ignore": [
      "dist",
      "docs",
      "es5",
      "test/dist",
      "test/karma.conf.js"
    ]
  },
  "files": [
    "CONTRIBUTING.md",
    "bower.json",
    "dist/",
    "docs/",
    "es5/",
    "index.html",
    "scripts/",
    "src/",
    "test/"
  ],
  "dependencies": {
    "video.js": "^5.6.0"
  },
  "devDependencies": {
    "babel": "^5.8.35",
    "babelify": "^6.4.0",
    "bannerize": "^1.0.2",
    "bluebird": "^3.2.2",
    "browserify": "^12.0.2",
    "browserify-shim": "^3.8.12",
    "browserify-versionify": "^1.0.6",
    "budo": "^8.0.4",
    "cz-conventional-changelog": "^1.1.5",
    "glob": "^6.0.3",
    "global": "^4.3.0",
    "karma": "^0.13.19",
    "karma-chrome-launcher": "^0.2.2",
    "karma-detect-browsers": "^2.0.2",
    "karma-firefox-launcher": "^0.1.7",
    "karma-ie-launcher": "^0.2.0",
    "karma-qunit": "^0.1.9",
    "karma-safari-launcher": "^0.1.1",
    "mkdirp": "^0.5.1",
    "npm-run-all": "^1.5.1",
    "publish-latest": "^1.1.2",
    "qunitjs": "^1.21.0",
    "rimraf": "^2.5.1",
    "semantic-release": "^4.3.5",
    "sinon": "~1.14.0",
    "uglify-js": "^2.6.1",
    "videojs-standard": "^4.0.0"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "readme": "# videojs-time-offset\nThis repo is forked from https://github.com/cladera/videojs-time-offset, ported to es6, fixed somebugs\n\n## Installation\n\n```sh\nnpm install --save videojs-time-offset\n```\n\nThe npm installation is preferred, but Bower works, too.\n\n```sh\nbower install  --save videojs-time-offset\n```\n\n## Usage\n\nTo include videojs-time-offset on your website or web application, use any of the following methods.\n\n### `<script>` Tag\n\nThis is the simplest case. Get the script in whatever way you prefer and include the plugin _after_ you include [video.js][videojs], so that the `videojs` global is available.\n\n```html\n<script src=\"//path/to/video.min.js\"></script>\n<script src=\"//path/to/videojs-time-offset.min.js\"></script>\n<script>\n  var player = videojs('my-video');\n\n  player.timeOffset({\n    start: 5, // in seconds\n    end: 10\n  });\n</script>\n```\nAlso you can use pagination params,\n\n```html\n<script>\nvar player = videojs('my-video');\n\nplayer.timeOffset({\n  page: 1, // starts from 1\n  perPageInMinutes: 10\n});\n</script>\n```\n\n### Browserify\n\nWhen using with Browserify, install videojs-time-offset via npm and `require` the plugin as you would any other module.\n\n```js\nvar videojs = require('video.js');\n\n// The actual plugin function is exported by this module, but it is also\n// attached to the `Player.prototype`; so, there is no need to assign it\n// to a variable.\nrequire('videojs-time-offset');\n\nvar player = videojs('my-video');\n\nplayer.time-offset();\n```\n\n### RequireJS/AMD\n\nWhen using with RequireJS (or another AMD library), get the script in whatever way you prefer and `require` the plugin as you normally would:\n\n```js\nrequire(['video.js', 'videojs-time-offset'], function(videojs) {\n  var player = videojs('my-video');\n\n  player.time-offset();\n});\n```\n\n## License\n\nMIT.\n\n\n[videojs]: http://videojs.com/\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dogusdigital/videojs-time-offset/issues"
  },
  "_id": "videojs-time-offset@0.2.1",
  "dist": {
    "shasum": "4da2eb37236f5fd59d018fdc94cd12469dc7a8ac"
  },
  "_from": "videojs-time-offset@",
  "_resolved": "https://registry.npmjs.org/videojs-time-offset/-/videojs-time-offset-0.2.1.tgz"
}
